#summary Building companion9x for the Mac
 
= Building companion9X for OS X =

Brief notes only until I figure out how it all works -- gruvin.

= Prerequisites =

You will need ...
 * [http://developer.apple.com/xcode/index.php Xcode 4] ( Apple Developer Tools)
 * [http://qt.nokia.com/ Qt] (Mac version, 4.x)
 * [http://www.cmake.org cmake]

== Installing Xcode ==

Xcode 4 is a massive (4GB) download. I believe it's free for OS X development, as opposed to iOS. _Somebody check me on this? I'm a paid up member, so not sure._

If you're doing any source compiling or code development on your Mac, then you already have Xcode. If not, you can get started by registering at the [http://developer.apple.com/devcenter/mac/index.action Apple Developer] site.
 
== Installing Qt ==

I used [http://www.macports.org/ MacPorts] ...

{{{
sudo port install qt4-mac +framework
}}}

Frameworks is needed so that frameworks are available to bundle with our final C'9X application bundle.

The build take quite a while, so don't bother sitting around waiting for it!

== Installing CMAKE ==

MacPorts to the rescue again ...
{{{
sudo port install cmake
}}}


== Check out the c9x source ==

See the [http://code.google.com/p/companion9x/source/checkout project's Source page], as provided by Googlecode.

== Prepare a Makefile using CMAKE ==

{{{
cd companion9x/trunk/src

cmake -G 'Unix Makefiles'
}}}

Finally, we're ready to compile ...

{{{
make clean && make
}}}

When the build process completes (with no errors) you should end up with a folder named `companion9x.app`.

It's probably a good idea at this point to check that the application runs OK by running the raw executable from the command line ...

{{{
companion9x.app/Contents/MacOSX/companion9x
}}}

*_You can stop here if you're not needed a drag-n-drop application bundle to give to a friend or whatever._*

== Creating a distributable Application Bundle ==

Assuming build and test step above run went well, you can now use a Qt utility `macdeplyqt` to build an OS X application bundle and also copy that into a new disk image file -- `companion9x.dmg`.

{{{
sudo macdeployqt companion9x.app -dmg -no-plug-ins
}}}

(sudo should not be required in my opinion. But for some reason it just seems to be needed.)

The end result of that should be a file `companion9x.dmg`, which when opened will contain a companion9x application icon, which can be dragged to your `/Applications` folder, in typical OS X fashion.


*IMPORT* As of this writing, I have NOT successfully created a working app bundle using the process above. But I'm pretty sure I will be able to, once my newly configured Qt has finished building. I'll update this page as soon as I have the good news to hand.