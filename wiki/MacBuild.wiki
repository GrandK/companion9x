#summary Building companion9x for the Mac
 
= Building companion9X for OS X =

Brief notes only until I figure out how it all works -- gruvin.

= Prerequisites =

You will need ...
 * [http://developer.apple.com/xcode/index.php Xcode 4] (Apple Developer Tools)
 * [http://qt.nokia.com/ Qt] (Mac version, 4.x)
 * [http://www.cmake.org cmake]

== Installing Xcode ==

If you're doing any source compiling or code development on your Mac, then you already have Xcode. If not, you can get started by registering at the [http://developer.apple.com/devcenter/mac/index.action Apple Developer] site. Alternatively, you can also obtain Xcode 4 from the Apple App Store.

Xcode 4 is a rather large (4GB!) download. I believe it's free for OS X developmen, which is what we need here. If not mistaken, you only have to pay an annual membership fee to get the iOS development library. _Somebody check me on this? I'm a paid up member, so not sure._
 
== Installing Qt ==

I used [http://www.macports.org/ MacPorts] ...

{{{
sudo port install qt4-mac +framework
}}}

The framework files are needed to be available for bundling with our final C'9X application.
*WRONG* This did NOT work. In fact, it broke everything. Back to the drawing board.

*NOTE* The qt4-mac build takes a _long_ time -- like an hour or more. So it's advisable not to just sit around waiting for it!

== Installing CMAKE ==

MacPorts to the rescue again ...
{{{
sudo port install cmake
}}}


= Buuilding companion9x itself =

Finally, we're ready to grab the source files and build companion9x itself.

== Check out the c9x source ==

See the [http://code.google.com/p/companion9x/source/checkout project's Source page], as provided by Googlecode.

== Prepare a Makefile using CMAKE ==

{{{
cd companion9x/trunk/src

cmake -G 'Unix Makefiles'
}}}

Finally, we're ready to compile ...

{{{
make clean && make
}}}

When the build process completes (with no show-stopping errors) you should end up with a folder named `companion9x.app`.

It's probably a good idea at this point to check that the application runs OK, by running the raw executable from the command line ...

{{{
companion9x.app/Contents/MacOSX/companion9x
}}}

*_You can stop here if you're not needing a drag-n-drop application bundle to install on a different Mac._*

The above direct, test run should work fine on your system, because you have the entire Qt framework installed. To distribute the application to other users who will likely not have Qt (or even MacPorts etc) installed, you'll need to continue on to build an application bundle.
    
== Creating a distributable Application Bundle ==

Assuming the build and test-run steps above went well, you can now use a Qt utility `macdeployqt` to build an OS X application bundle and then copy that into a new disk image file -- `companion9x.dmg`, for convenient distribution.

{{{
sudo macdeployqt companion9x.app -dmg -no-plug-ins
}}}

(sudo should not be required in my opinion. But for some reason it just seems to be needed.)

The end result of that should be a disk image file named `companion9x.dmg`, which when opened should contain a companion9x application icon, which in turn can be dragged to your `/Applications` folder, in typical OS X fashion.


*IMPORTANT* As of this writing, I have NOT successfully created a working app bundle using the process above. But I'm pretty sure I will be able to, once my newly configured Qt has finished building. I'll update this page as soon as I have the good news to hand.
